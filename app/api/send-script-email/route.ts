import { NextRequest, NextResponse } from 'next/server'
import { Resend } from 'resend'

const resend = new Resend(process.env.RESEND_API_KEY)

export async function POST(req: NextRequest) {
  try {
    const { to, name, script, formData } = await req.json()

    console.log('Send script email called:', { to, name, scriptLength: script?.length })

    if (!script) {
      return NextResponse.json({ error: 'Script is required' }, { status: 400 })
    }

    if (!to) {
      return NextResponse.json({ error: 'Recipient email is required' }, { status: 400 })
    }

    const emailTo = to
    const emailSubject = `Recruiting Script - ${formData?.scriptType || 'Script'} for ${name || 'Agent'}`

    const emailContent = `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <h2>${emailSubject}</h2>
        <div style="background-color: #f5f5f5; padding: 20px; border-radius: 8px; margin: 20px 0;">
          <pre style="white-space: pre-wrap; font-family: Arial, sans-serif; margin: 0;">${script}</pre>
        </div>
        <p style="color: #666; font-size: 14px;">
          Generated by RealRecruit - Empower AI Platform
        </p>
      </div>
    `

    const { data, error } = await resend.emails.send({
      from: 'Empower AI <noreply@getempowerai.com>',
      to: emailTo,
      subject: emailSubject,
      html: emailContent,
    })

    if (error) {
      console.error('Resend error:', error)
      return NextResponse.json({ error: 'Failed to send email' }, { status: 500 })
    }

    return NextResponse.json({ 
      success: true, 
      messageId: data?.id,
      message: 'Email sent successfully'
    })

  } catch (error) {
    console.error('Send script email error:', error)
    return NextResponse.json({ error: 'Failed to send email' }, { status: 500 })
  }
}