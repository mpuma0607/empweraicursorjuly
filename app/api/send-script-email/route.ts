import { NextRequest, NextResponse } from "next/server"
import { Resend } from "resend"

const resend = new Resend(process.env.RESEND_API_KEY)

export async function POST(request: NextRequest) {
  try {
    const { to, name, script, formData } = await request.json()

    // Validate required fields
    if (!to || !name || !script) {
      return NextResponse.json(
        { error: 'Missing required fields: to, name, script' },
        { status: 400 }
      )
    }

    if (!process.env.RESEND_API_KEY) {
      console.error("RESEND_API_KEY is missing!")
      return NextResponse.json({ 
        error: "Email service not configured - RESEND_API_KEY environment variable is missing",
        details: {
          message: "The RESEND_API_KEY environment variable is required for sending emails",
          solution: "Add RESEND_API_KEY to your environment variables or deployment configuration",
          currentEnv: process.env.NODE_ENV,
          isVercel: !!process.env.VERCEL
        }
      }, { status: 500 })
    }

    console.log("Sending script email via Resend to:", to)
    console.log("Environment info:", {
      hasApiKey: !!process.env.RESEND_API_KEY,
      environment: process.env.NODE_ENV,
      isVercel: !!process.env.VERCEL
    })
    console.log("Email payload:", {
      from: "ScriptIt AI <noreply@marketing.getempowerai.com>",
      to: [to],
      subject: `Your Professional Script - ${formData?.scriptType || 'Script'} | Empower AI`,
      scriptLength: script.length,
      formDataKeys: Object.keys(formData || {})
    })

    // Create email content
    let emailContent: string
    try {
      emailContent = `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <h2 style="color: #2563eb; border-bottom: 2px solid #2563eb; padding-bottom: 10px;">
            Your Professional Script
          </h2>
          
          <p><strong>Hello ${name},</strong></p>
          
          <p>Here's your personalized professional script:</p>
          
          <div style="background-color: #f8fafc; border-left: 4px solid #2563eb; padding: 20px; margin: 20px 0; border-radius: 4px;">
            <div style="white-space: pre-wrap; font-family: 'Courier New', monospace; line-height: 1.6;">
              ${script}
            </div>
          </div>
          
          <div style="background-color: #f0f9ff; border: 1px solid #0ea5e9; padding: 15px; border-radius: 4px; margin: 20px 0;">
            <h4 style="margin: 0 0 10px 0; color: #0369a1;">Script Details:</h4>
            <ul style="margin: 0; padding-left: 20px;">
              <li><strong>Script Type:</strong> ${formData?.scriptType || 'N/A'}</li>
              <li><strong>Script Category:</strong> ${formData?.scriptTypeCategory || 'N/A'}</li>
              <li><strong>Prospect Type:</strong> ${formData?.prospectType || 'N/A'}</li>
              <li><strong>Tonality:</strong> ${formData?.tonality || 'N/A'}</li>
              <li><strong>Language:</strong> ${formData?.language || 'N/A'}</li>
            </ul>
          </div>
          
          <p style="color: #6b7280; font-size: 14px;">
            This script was generated using AI-powered tools and incorporates proven sales psychology principles.
            Customize it further based on your specific prospect and situation.
          </p>
          
          <hr style="border: none; border-top: 1px solid #e5e7eb; margin: 30px 0;">
          
          <p style="color: #6b7280; font-size: 12px; text-align: center;">
            Generated by Empower AI - Professional Real Estate Scripts
          </p>
        </div>
      `
      console.log("Email content created successfully, length:", emailContent.length)
    } catch (contentError) {
      console.error("Error creating email content:", contentError)
      return NextResponse.json(
        { error: `Failed to create email content: ${contentError instanceof Error ? contentError.message : 'Unknown error'}` },
        { status: 500 }
      )
    }

    const result = await resend.emails.send({
      from: "ScriptIT AI <noreply@marketing.getempowerai.com>",
      to: [to],
      subject: `Your Professional Script - ${formData?.scriptType || 'Script'} | Empower AI`,
      html: emailContent,
    })

    if (result.error) {
      console.error("Resend API error:", result.error)
      const errorMessage = result.error.message || result.error.toString() || 'Unknown Resend API error'
      return NextResponse.json(
        { error: `Failed to send email: ${errorMessage}` },
        { status: 500 }
      )
    }

    console.log("Script email sent successfully via Resend:", result.data?.id)

    return NextResponse.json({
      success: true,
      messageId: result.data?.id,
      message: 'Script email sent successfully via Resend'
    })

  } catch (error) {
    console.error('Error sending script email via Resend:', error)
    return NextResponse.json(
      { 
        error: error instanceof Error ? error.message : 'Failed to send email',
        details: {
          message: "An unexpected error occurred while sending the email",
          originalError: error instanceof Error ? error.message : String(error),
          envInfo: {
            hasApiKey: !!process.env.RESEND_API_KEY,
            environment: process.env.NODE_ENV,
            isVercel: !!process.env.VERCEL
          }
        }
      },
      { status: 500 }
    )
  }
}
