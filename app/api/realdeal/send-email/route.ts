import { type NextRequest, NextResponse } from "next/server"
import { Resend } from "resend"

const resend = new Resend(process.env.RESEND_API_KEY)

export async function POST(request: NextRequest) {
  try {
    console.log("=== REALDEAL EMAIL API START ===")
    console.log("Resend API Key exists:", !!process.env.RESEND_API_KEY)
    
    const formData = await request.formData()
    
    const analysis = formData.get("analysis") as string
    const agentName = formData.get("agentName") as string
    const propertyAddress = formData.get("propertyAddress") as string
    const email = formData.get("email") as string

    console.log("Form data received:", { 
      hasAnalysis: !!analysis, 
      agentName, 
      email, 
      propertyAddress,
      analysisLength: analysis?.length || 0
    })

    if (!analysis || !agentName || !email) {
      console.error("Missing required fields:", { analysis: !!analysis, agentName: !!agentName, email: !!email })
      return NextResponse.json(
        { error: "Missing required fields" },
        { status: 400 }
      )
    }

    const emailHtml = `
      <div style="font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px;">
        <div style="background: linear-gradient(135deg, #f59e0b, #d97706); padding: 30px; border-radius: 10px; margin-bottom: 30px; text-align: center;">
          <h1 style="color: white; margin: 0; font-size: 28px; font-weight: bold;">RealDeal AI Contract Analysis</h1>
          <p style="color: white; margin: 10px 0 0 0; font-size: 16px; opacity: 0.9;">Professional Contract Summary</p>
        </div>
        
        <div style="background-color: #f8fafc; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
          <h2 style="color: #1f2937; margin: 0 0 10px 0; font-size: 20px;">Property Details</h2>
          <p style="color: #6b7280; margin: 0; font-size: 16px;"><strong>Property:</strong> ${propertyAddress || "Not specified"}</p>
          <p style="color: #6b7280; margin: 5px 0 0 0; font-size: 16px;"><strong>Prepared for:</strong> ${agentName}</p>
          <p style="color: #6b7280; margin: 5px 0 0 0; font-size: 16px;"><strong>Generated:</strong> ${new Date().toLocaleDateString()}</p>
        </div>

        <div style="background-color: white; border: 1px solid #e5e7eb; border-radius: 8px; padding: 25px; margin-bottom: 20px;">
          <h2 style="color: #1f2937; margin: 0 0 20px 0; font-size: 22px; border-bottom: 2px solid #f59e0b; padding-bottom: 10px;">Contract Analysis</h2>
          <div style="line-height: 1.6; color: #374151; font-size: 16px;">
            ${analysis.replace(/\n/g, '<br>')}
          </div>
        </div>

        <div style="background-color: #f0f9ff; border-left: 4px solid #0ea5e9; padding: 20px; border-radius: 0 8px 8px 0; margin-bottom: 20px;">
          <h3 style="color: #0c4a6e; margin: 0 0 10px 0; font-size: 18px;">Important Notes</h3>
          <p style="color: #0c4a6e; margin: 0; font-size: 14px; line-height: 1.5;">
            This analysis is generated by AI and should be reviewed by a qualified real estate professional. 
            Always consult with legal counsel for complex contract matters.
          </p>
        </div>

        <div style="text-align: center; padding: 20px; border-top: 1px solid #e5e7eb; margin-top: 30px;">
          <p style="color: #6b7280; margin: 0; font-size: 14px;">
            Generated by RealDeal AI | The Next Level U
          </p>
          <p style="color: #9ca3af; margin: 5px 0 0 0; font-size: 12px;">
            This email was sent to ${email}
          </p>
        </div>
      </div>
    `

    console.log("Sending email via Resend...")
    console.log("Email to:", email)
    console.log("Email from: RealDeal AI <noreply@marketing.getempowerai.com>")
    console.log("Subject:", `Contract Analysis - ${propertyAddress || "Real Estate Contract"}`)

    const response = await resend.emails.send({
      from: "RealDeal AI <noreply@marketing.getempowerai.com>",
      to: [email],
      subject: `Contract Analysis - ${propertyAddress || "Real Estate Contract"}`,
      html: emailHtml,
    })

    console.log("RealDeal email response:", response)

    if (response.error) {
      console.error("Resend error details:", response.error)
      throw new Error(`Resend API error: ${response.error.message || JSON.stringify(response.error)}`)
    }

    if (!response.data) {
      throw new Error("No response data from Resend")
    }

    console.log("RealDeal email sent successfully:", response.data.id)
    return NextResponse.json({
      success: true,
      messageId: response.data.id,
      message: "Contract analysis email sent successfully",
    })
  } catch (error) {
    console.error("=== REALDEAL EMAIL SEND ERROR ===")
    console.error("Error details:", error)
    console.error("Error stack:", error instanceof Error ? error.stack : "No stack trace")

    return NextResponse.json(
      {
        success: false,
        error: `Failed to send email: ${error instanceof Error ? error.message : "Unknown error"}`,
        details: error instanceof Error ? error.stack : error,
      },
      { status: 500 }
    )
  }
}
